/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.rit.cs.dbc.view;

import edu.rit.cs.dbc.controller.MovieTableController;
import edu.rit.cs.dbc.model.Purchase;
import edu.rit.cs.dbc.model.PurchaseMovieTableModel;

/**
 * The screen containing a member's collection of purchased movies
 */
public class PurchasePanel extends javax.swing.JPanel {

    /**
     * Creates new form PurchasePanel
     */
    public PurchasePanel() {
        initComponents();
    }
    
    /**
     * Have the mediator register this view and load the 
     * movies in the table
     * @param movieTableController the mediator to relay communication
     *                             between views
     */
    public void registerController(MovieTableController movieTableController) {
        this.movieTableController = movieTableController;
        this.movieTableController.registerPurchasedPanel(this);
        this.movieTableController.loadPurchasedMoviesTable();
    }

    /**
     * Returns the table model of this screen
     * @return the table model of a member's purchased movies
     */
    public PurchaseMovieTableModel getPurchaseMovieTableModel() {
        return purchaseMovieTableModel;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonPanel = new javax.swing.JPanel();
        watchButton = new javax.swing.JButton();
        upperPanel = new javax.swing.JPanel();
        purchaseScrollPane = new javax.swing.JScrollPane();
        purchaseTable = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        buttonPanel.setPreferredSize(new java.awt.Dimension(400, 58));

        watchButton.setText("Watch");
        watchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                watchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(watchButton)
                .addContainerGap(319, Short.MAX_VALUE))
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(watchButton)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        add(buttonPanel, java.awt.BorderLayout.SOUTH);

        purchaseTable.setModel(purchaseMovieTableModel);
        purchaseTable.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        purchaseScrollPane.setViewportView(purchaseTable);

        javax.swing.GroupLayout upperPanelLayout = new javax.swing.GroupLayout(upperPanel);
        upperPanel.setLayout(upperPanelLayout);
        upperPanelLayout.setHorizontalGroup(
            upperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(upperPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(purchaseScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                .addContainerGap())
        );
        upperPanelLayout.setVerticalGroup(
            upperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(upperPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(purchaseScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                .addContainerGap())
        );

        add(upperPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Add the purchased movie to the recently watched table if the movie
     * has not been watched yet; otherwise, increment the watch count 
     * of the movie
     * @param evt the action event triggered by the "Watch" button
     */
    private void watchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_watchButtonActionPerformed
        int selectedRow = purchaseTable.getSelectedRow();
        if (selectedRow > -1) {
            selectedRow = purchaseTable.convertRowIndexToModel(selectedRow);
            Purchase p = purchaseMovieTableModel.getPurchaseAt(selectedRow);
            movieTableController.watchMovie(p.getMovie());
        }
    }//GEN-LAST:event_watchButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JScrollPane purchaseScrollPane;
    private javax.swing.JTable purchaseTable;
    private javax.swing.JPanel upperPanel;
    private javax.swing.JButton watchButton;
    // End of variables declaration//GEN-END:variables
    
    // the table model of the member's purchased movies
    private PurchaseMovieTableModel purchaseMovieTableModel = new PurchaseMovieTableModel();
    
    // the mediator for sending requests on background threads
    private MovieTableController movieTableController;
}
